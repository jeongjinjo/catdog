spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver

    url: ENC(94Isl1HlY5fQSQt03knEYD7pHHBVqOgGxKR8hbYeNiZ3PFbYWXGI4PoSuXGnY1mlbj7eF4WG0P/UxYg6h1SZ+iiMM05ZF5TewBjC3x5L2A6ldFX115r38MeQ9RmIVQgLfIx1Rl5n3FjIBC8nS3xGz4DKw5UqmYi9LEatKkFHY8A=)
    username: ENC(H+puQrDoE0uErjjkDsqcWw==)
    password: ENC(4fvvGD/B116CHjYmCzharw==)

  jpa:
    database: mysql
    database-platform: org.hibernate.dialect.MySQLDialect
    defer-datasource-initialization: true
    hibernate:
      ddl-auto: none
    generate-ddl: true
    show-sql: true
    properties:
      hibernate:
        jdbc.batch_size: 50
        order_inserts: true
        order_updates: true
        format_sql: true

  jwt:
    secret: 7KCV7J2A7JWg7JaR6rCA7JiB7KCV7KeE7KGw6rOg7LCs7JqwY2F0ZG9ncjhHbdSN23nf2588NUnsdh
# 용량 설정
  multipart:
    max-file-size: 10MB
    max-request-size: 10MB
    file-size-threshold: 0

  springdoc:
    swagger-ui:
      path: /swagger-ui/index.html
    openapi-ui:
      path: /v3/api-docs

  openapi: "3.0.0"
  info:
    title: catdog
    version: 1.0.0
  paths:
    /auth/**:
      get:
        description: 인증이 필요 없는 공개 정보를 검색합니다.
        responses:
          '200':
            description: ok
      post:
        description: 인증이 필요 없는 데이터를 제출합니다.
        responses:
          '200':
            description: ok
      put:
        description: 인증이 필요 없는 데이터를 제출합니다.
        responses:
          '200':
            description: ok

#  sql:
#    init:
#      mode: always

jasypt:
  encryptor:
    password: ${PASSWORD}
